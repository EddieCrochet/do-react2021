{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Expenses/Expenses.js","components/Expenses/NewExpense/ExpenseForm.js","components/Expenses/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onFilterChange","target","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","exp","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","onClick","onStopEditing","NewExpense","isEditing","setIsEditing","enteredExpenseData","Math","random","onAddExpense","DUMMYEXPENSES","App","expenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95463411.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\nimport React from 'react';\r\n\r\nfunction ExpenseDate(props) {\r\n    const month = props.date.toLocaleString('en-us', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-us', {day: 'numeric'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import './Card.css';\r\nimport React from 'react';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    // anything inside unique component  will be props.children\r\n    // IE. allows you to creat  wrapper components\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport React from 'react';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n    return (\r\n    <li>\r\n        <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}/>\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n            );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = props => {\r\n\r\n    if(props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>\r\n    }\r\n\r\n    return <ul className=\"expenses-list\">\r\n        {props.items.map((expense) => (\r\n            <ExpenseItem\r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}/>))}\r\n    </ul>\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const yearSelectorhandler = (event) => {\r\n    props.onFilterChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={yearSelectorhandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import ExpensesList from './ExpensesList';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport './Expenses.css';\r\nimport React, { useState } from 'react';\r\n\r\nfunction Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items\r\n        .filter(exp => exp.date.getFullYear().toString() === filteredYear);\r\n\r\n    \r\n    \r\n    return (<div>\r\n            <Card className='expenses'>\r\n            <ExpensesFilter selected={filteredYear} onFilterChange={filterChangeHandler} />\r\n            <ExpensesList items={filteredExpenses} />\r\n               \r\n               {/* ...and the most lean way keeps the logic out of the return - what we have uncommented...\r\n               {filteredExpenses.length === 0 && <p>No expenses found...</p>}\r\n               {filteredExpenses.length > 0 && \r\n                    filteredExpenses.map((expense) => (\r\n                    <ExpenseItem\r\n                        key={expense.id}\r\n                        title={expense.title}\r\n                        amount={expense.amount}\r\n                        date={expense.date}/>))\r\n                } */}\r\n               \r\n               {/*  ifs and for not allowd in brackets so  we have to use a lot of ternarys\r\n                if the ternary gets too long we can short hand hack it the way it's done above*/}\r\n                {/* {filteredExpenses.length === 0 ? (\r\n                    <p>No expenses found...</p>\r\n                ) : (\r\n                    filteredExpenses.map((expense) => (\r\n                    <ExpenseItem\r\n                        key={expense.id}\r\n                        title={expense.title}\r\n                        amount={expense.amount}\r\n                        date={expense.date}/>))\r\n                    ) \r\n                } */}\r\n            </Card>\r\n            </div>)\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    // above is most common but you can also manage one state as below\r\n    /*\r\n    const [userInput, setUserInput] = useState({\r\n        enteredTitle: '',\r\n        enteredAmount: '',\r\n        enteredDate: '',\r\n    });\r\n    */\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        /*\r\n        setUserInput({\r\n            ...userInput,\r\n            enteredTitle: event.target.value,\r\n        })\r\n        */\r\n\r\n        // can also be done as below\r\n\r\n        // using previous state ensures you are using the latest update of state snapshot\r\n        /*\r\n        setUserinput((prevState) => {\r\n            return {...prevState, enteredTitle: event.target.value};\r\n        });\r\n        */\r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        /*\r\n        setUserInput({\r\n            ...userInput,\r\n            enteredAmount: event.target.value,\r\n        })\r\n        */\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        /*\r\n        setUserInput({\r\n            ...userInput,\r\n            enteredDate: event.target.value,\r\n        })\r\n        */\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        //below works with state to clear the form\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n\r\n    };\r\n\r\n    return (\r\n    <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input \r\n                    type='text' \r\n                    value={enteredTitle} \r\n                    onChange={titleChangeHandler}\r\n                />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input \r\n                    type='number' \r\n                    min='0.01' \r\n                    step=\"0.01\" \r\n                    value={enteredAmount}\r\n                    onChange={amountChangeHandler}\r\n                />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input \r\n                    type='date' \r\n                    min=\"2019-01-01\" \r\n                    max=\"2022-01-01\" \r\n                    value={enteredDate}\r\n                    onChange={dateChangeHandler} \r\n                />\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add Expense</button>\r\n                <button type=\"button\" onClick={props.onStopEditing}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    </form>)\r\n};\r\n\r\nexport default ExpenseForm;","import React, {useState} from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        // lifting the data back up\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n    <div className=\"new-expense\">\r\n        {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n         {/*this sets a pointer to the saveExpenseDataHandler function \r\n         in this ExpenseForm instance*/}\r\n        {isEditing && <ExpenseForm onStopEditing={stopEditingHandler} onSaveExpenseData={saveExpenseDataHandler} /> }\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import Expenses from'./components/Expenses/Expenses.js';\r\nimport NewExpense from './components/Expenses/NewExpense/NewExpense.js';\r\nimport React, {useState} from 'react';\r\n\r\nconst DUMMYEXPENSES = [\r\n  {\r\n    id: 'e1',\r\n    title: 'Toilet Paper',\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: 'e3',\r\n    title: 'Car Insurance',\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: 'e4',\r\n    title: 'New Desk (Wooden)',\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(DUMMYEXPENSES);\r\n\r\n  const addExpenseHandler = expense => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler}/>\r\n      <Expenses items = {expenses}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}